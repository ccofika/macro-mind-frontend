/* Canvas Container */
.canvas-container {
  width: 100%;
  height: 100vh;
  background: radial-gradient(ellipse at center, #0F0F11 0%, #0A0A0C 100%);
  position: relative;
  overflow: hidden;
  cursor: grab;
  user-select: none;
  will-change: transform;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.canvas {
  width: 100%;
  height: 100%;
  position: relative;
}

/* Zooming state */
.canvas-container.zooming {
  cursor: zoom-in;
}

.canvas-container.zooming .cards-container,
.canvas-container.zooming .connections-container {
  transition: none !important;
}

/* Card placeholder for high performance mode */
.card-placeholder {
  position: absolute;
  border-radius: 8px;
  pointer-events: none;
  opacity: 0.8;
  will-change: transform;
}

/* Grid Pattern Background - removed, now handled by JavaScript */

/* Subtle Gradient Overlay */
.canvas::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    circle at 50% 50%,
    transparent 0%,
    rgba(0, 0, 0, 0.2) 100%
  );
  pointer-events: none;
}

.canvas-container:active {
  cursor: grabbing !important;
}

.canvas-container.panning {
  cursor: grabbing !important;
}

.canvas-container.connect-mode {
  cursor: crosshair;
}

/* Grid Pattern SVG */
.grid-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  opacity: 0.15;
  will-change: transform;
}

/* Cards Container */
.cards-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  transform-origin: 0 0;
  will-change: transform;
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

/* Connections Container */
.connections-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  transform-origin: 0 0;
  pointer-events: none;
  z-index: 5;
  will-change: transform;
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

/* Connection Lines */
.connection-line-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 5;
}

.connection-line {
  stroke: rgba(74, 158, 255, 0.4);
  stroke-width: 2;
  fill: none;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  filter: drop-shadow(0 0 3px rgba(74, 158, 255, 0.3));
  will-change: stroke-dashoffset;
}

.connection-line.highlighted {
  stroke: rgba(74, 158, 255, 0.8);
  stroke-width: 3;
  filter: drop-shadow(0 0 8px rgba(74, 158, 255, 0.6));
}

/* Card connection */
.card-connection {
  position: absolute;
  background-color: rgba(74, 158, 255, 0.6);
  height: 2px;
  will-change: transform, opacity;
  transform-origin: left center;
  transition: height 0.2s, opacity 0.2s, background-color 0.2s;
  pointer-events: none;
}

.card-connection.highlighted {
  height: 3px;
  background-color: var(--accent-color);
  opacity: 0.9;
  box-shadow: 0 0 8px rgba(74, 158, 255, 0.5);
}

/* Connect Mode Indicator */
.connect-mode-indicator {
  position: fixed;
  bottom: 24px;
  left: 50%;
  transform: translateX(-50%);
  background: linear-gradient(135deg, rgba(74, 158, 255, 0.15) 0%, rgba(74, 158, 255, 0.1) 100%);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(74, 158, 255, 0.3);
  color: rgba(147, 197, 253, 0.9);
  padding: 12px 20px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 14px;
  font-weight: 500;
  z-index: 100;
  box-shadow: 
    0 8px 32px rgba(74, 158, 255, 0.2),
    0 2px 8px rgba(0, 0, 0, 0.3);
  animation: connectIndicatorSlide 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes connectIndicatorSlide {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

.connect-icon {
  font-size: 18px;
  display: flex;
  align-items: center;
  animation: connectPulse 2s ease-in-out infinite;
}

@keyframes connectPulse {
  0%, 100% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
}

.connect-icon svg {
  width: 18px;
  height: 18px;
}

.connect-exit-button {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.8);
  padding: 4px 12px;
  margin-left: 8px;
  border-radius: 8px;
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.connect-exit-button:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.2);
  transform: scale(1.05);
}

/* Loading State */
.canvas-loading {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: linear-gradient(135deg, rgba(20, 20, 22, 0.95) 0%, rgba(25, 25, 28, 0.95) 100%);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 16px;
  padding: 32px;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  z-index: 1000;
  min-width: 240px;
  text-align: center;
  box-shadow: 
    0 24px 48px rgba(0, 0, 0, 0.5),
    0 8px 16px rgba(0, 0, 0, 0.3);
}

.loading-spinner {
  width: 48px;
  height: 48px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  border-top-color: var(--accent-color);
  animation: spin 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.loading-text {
  font-size: 16px;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.9);
  letter-spacing: 0.02em;
}

/* Error State */
.canvas-error {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: linear-gradient(135deg, rgba(20, 20, 22, 0.95) 0%, rgba(25, 25, 28, 0.95) 100%);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(244, 67, 54, 0.2);
  border-radius: 16px;
  padding: 32px;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  z-index: 1000;
  min-width: 280px;
  text-align: center;
  box-shadow: 
    0 24px 48px rgba(0, 0, 0, 0.5),
    0 8px 16px rgba(0, 0, 0, 0.3);
}

.error-icon {
  font-size: 32px;
  color: #FF6B6B;
  animation: errorPulse 2s ease-in-out infinite;
}

@keyframes errorPulse {
  0%, 100% {
    opacity: 0.8;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

.error-message {
  font-size: 16px;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.95);
  margin-bottom: 8px;
}

.error-subtext {
  font-size: 13px;
  color: rgba(255, 255, 255, 0.6);
  line-height: 1.5;
}

/* Server Connection Status */
.server-status {
  position: fixed;
  bottom: 16px;
  right: 16px;
  font-size: 12px;
  font-weight: 500;
  padding: 6px 12px;
  border-radius: 8px;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 8px;
  opacity: 0.6;
}

.server-status:hover {
  opacity: 1;
  transform: translateY(-2px);
}

.server-status-indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  animation: statusPulse 2s ease-in-out infinite;
}

@keyframes statusPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
}

.server-status.connected {
  background: rgba(76, 175, 80, 0.1);
  border: 1px solid rgba(76, 175, 80, 0.2);
  color: #4CAF50;
}

.server-status.connected .server-status-indicator {
  background: #4CAF50;
  box-shadow: 0 0 8px rgba(76, 175, 80, 0.6);
}

.server-status.disconnected {
  background: rgba(244, 67, 54, 0.1);
  border: 1px solid rgba(244, 67, 54, 0.2);
  color: #FF6B6B;
}

.server-status.disconnected .server-status-indicator {
  background: #FF6B6B;
  box-shadow: 0 0 8px rgba(244, 67, 54, 0.6);
}

/* Zoom Controls */
.zoom-controls {
  position: fixed;
  bottom: 24px;
  right: 220px;
  display: flex;
  align-items: center;
  background: rgba(20, 20, 22, 0.7);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 8px;
  z-index: 100;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.zoom-button {
  width: 32px;
  height: 32px;
  border-radius: 8px;
  border: none;
  background: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.8);
  font-size: 16px;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  margin: 0 2px;
}

.zoom-button:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: scale(1.05);
}

.zoom-button:active {
  transform: scale(0.95);
}

/* High performance mode button */
.zoom-button.active {
  background: rgba(255, 215, 0, 0.2);
  color: rgba(255, 215, 0, 0.9);
  box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
}

.zoom-level {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  margin: 0 8px;
  min-width: 40px;
  text-align: center;
}

/* Performance stats display */
.performance-stats {
  position: fixed;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 12px;
  border-radius: 4px;
  font-size: 12px;
  font-family: monospace;
  z-index: 1000;
}

/* Selection Box */
.selection-box {
  position: absolute;
  border: 1px dashed rgba(74, 158, 255, 0.6);
  background: rgba(74, 158, 255, 0.05);
  border-radius: 4px;
  pointer-events: none;
  z-index: 50;
}

/* Context Menu */
.context-menu {
  position: fixed;
  background: linear-gradient(135deg, rgba(20, 20, 22, 0.98) 0%, rgba(25, 25, 28, 0.98) 100%);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 12px;
  padding: 8px;
  min-width: 180px;
  z-index: 1000;
  box-shadow: 
    0 12px 40px rgba(0, 0, 0, 0.5),
    0 4px 12px rgba(0, 0, 0, 0.3);
  animation: contextMenuFade 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes contextMenuFade {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.context-menu-item {
  padding: 10px 16px;
  border-radius: 8px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 13px;
  color: rgba(255, 255, 255, 0.8);
  transition: all 0.15s ease;
}

.context-menu-item:hover {
  background: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.95);
}

.context-menu-item-icon {
  font-size: 16px;
  opacity: 0.7;
}

.context-menu-divider {
  height: 1px;
  background: rgba(255, 255, 255, 0.06);
  margin: 8px 16px;
}

/* Performance Optimizations */
.canvas * {
  will-change: auto;
}

.canvas.is-panning .cards-container,
.canvas.is-zooming .cards-container {
  will-change: transform;
}

/* Canvas Content */
.canvas-content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-origin: 0 0;
  will-change: transform;
}

/* Smooth card transitions */
.card {
  transition: transform 0.1s ease-out;
  will-change: transform;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

/* Improve performance with hardware acceleration */
.canvas,
.canvas-content,
.cards-container,
.connections-container,
.card,
.connection-line {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Responsive Design */
@media (max-width: 768px) {
  .connect-mode-indicator {
    padding: 10px 16px;
    font-size: 13px;
    bottom: 16px;
  }
  
  .zoom-controls {
    bottom: 70px;
    right: 16px;
  }
  
  .zoom-button {
    width: 36px;
    height: 36px;
    font-size: 16px;
  }
  
  /* Adjust minimap position on small screens */
  .minimap-container {
    bottom: 15px;
    right: 15px;
    width: 150px;
    height: 120px;
  }
}

/* Optimize CSS animations */
@media (prefers-reduced-motion: reduce) {
  .card-connection, 
  .connect-mode-indicator,
  .zoom-button {
    transition: none !important;
    animation: none !important;
  }
}

/* Removed old collaboration UI styles - now using CollaborationPanel */

/* Responsive adjustments removed - now using CollaborationPanel */

/* Removed collaboration test indicator - now using CollaborationPanel */

/* No space selected message */
.no-space-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(30, 30, 35, 0.95);
  border: 2px solid var(--accent-color);
  border-radius: 12px;
  padding: 2rem;
  text-align: center;
  z-index: 1000;
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.no-space-content h3 {
  margin: 0 0 1rem 0;
  color: var(--accent-color);
  font-size: 1.5rem;
}

.no-space-content p {
  margin: 0.5rem 0;
  color: var(--text-secondary);
  line-height: 1.5;
}

.no-space-content p:last-child {
  margin-bottom: 0;
}